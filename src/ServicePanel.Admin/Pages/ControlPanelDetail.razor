@page "/control-panel-detail/{address}"
@inject ServiceControlService ControlService

<MudTable Items="@services"
          Hover="true"
          Striped="true"
          Dense="true"
          @ref="_table"
          FixedHeader="true" FixedFooter="true" Height="560px"
          Filter="p => FilterFunc(p, searchString)"
          Loading="@_loading"
          LoadingProgressColor="Color.Info">
    <ToolBarContent>
        <MudText Typo="Typo.h6">@Address</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<ServiceModel, object>(x=>x.ServiceName)">名称</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ServiceModel, object>(x=>x.Pid)">PID</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ServiceModel, object>(x=>x.DisplayName)">描述</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ServiceModel, object>(x=>x.Status)">状态</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ServiceModel, object>(x=>x.StartType)">启动类型</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ServiceModel, object>(x=>x.ExePath)">命令行</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="名称">@context.ServiceName</MudTd>
        <MudTd DataLabel="PID">@context.Pid</MudTd>
        <MudTd DataLabel="描述">@context.DisplayName</MudTd>
        <MudTd DataLabel="状态">@context.Status</MudTd>
        <MudTd DataLabel="启动类型">@context.StartType</MudTd>
        <MudTd DataLabel="命令行">@context.ExePath</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100, int.MaxValue }" />
    </PagerContent>
</MudTable>

@code {
    [Parameter]
    public string Address { get; set; }

    private MudTable<ServiceModel>? _table;
    private bool _loading = true;
    private string searchString = "";
    private ServiceModel[]? services;

    protected override async Task OnInitializedAsync()
    {
        services = await ControlService.GetAllServices(Address);
        _loading = false;
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && _table != null)
        {
            _table.SetRowsPerPage(50);
        }

        return base.OnAfterRenderAsync(firstRender);
    }

    private bool FilterFunc(ServiceModel? element, string searchString)
    {
        if (element == null)
            return false;
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.ServiceName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.DisplayName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.ExePath.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Status.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.StartType.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}
