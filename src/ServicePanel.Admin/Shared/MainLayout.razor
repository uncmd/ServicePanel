@inherits LayoutComponentBase
@implements IDisposable
@inject LayoutService LayoutService

<PageTitle>Windows服务管理工具</PageTitle>

<MudRTLProvider RightToLeft="@LayoutService.IsRTL">
    <audio id="notification" src="/media/notification.mp3" />
    <MudThemeProvider Theme="@LayoutService.CurrentTheme" IsDarkMode="@LayoutService.IsDarkMode" IsDarkModeChanged="LayoutService.SetDarkMode" />
    <MudDialogProvider DisableBackdropClick="true" />
    <MudSnackbarProvider />

    <MudLayout>
        <ErrorBoundary @ref="errorBoundary">
            <ChildContent>
                <MainBody>
                    @Body
                </MainBody>
            </ChildContent>
            <ErrorContent>
                <ErrorView Exception=context />
            </ErrorContent>
        </ErrorBoundary>
    </MudLayout>
</MudRTLProvider>

@code {
    private ErrorBoundary errorBoundary;

    protected override void OnInitialized()
    {
        LayoutService.MajorUpdateOccured += LayoutServiceOnMajorUpdateOccured;
        LayoutService.SetBaseTheme(ServicePanelTheme.DefaultTheme());
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        errorBoundary?.Recover();
    }

    public void Dispose()
    {
        LayoutService.MajorUpdateOccured -= LayoutServiceOnMajorUpdateOccured;
    }

    private void LayoutServiceOnMajorUpdateOccured(object sender, EventArgs e) => StateHasChanged();
}
